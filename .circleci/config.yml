version: 2
general:
  branches:
    only:
     - master
     
jobs:
  # Back End
  BackBuild:
    working_directory: ~/repo/BackEnd/assignment1
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout:
          path: ~/repo
      - run: ./mvnw -Dmaven.test.skip=true package
  BackTest:
    working_directory: ~/repo/BackEnd/assignment1
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout:
          path: ~/repo
      - run: ./mvnw test
  #Front end
  FrontTest:
    docker:
      - image: circleci/node:12.18.3-browsers
    working_directory: ~/repo/FrontEnd
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
            - ~/.npm
            - ~/.cache
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test
  # #Docker
  # DockerBuild:
  #   docker:
  #     # using custom image, see .circleci/images/primary/Dockerfile
  #     - image: circleci/cci-demo-docker-primary:0.0.2
  #   steps:
  #     - run:
  #         name: Start container and verify it's working
  #         command: |
  #           set -x
  #           docker-compose up -d
  #           # docker-compose will start 2 containers, the one with service will be named `contacts`
  #           # we start another container with curl in the same network as `contacts`, this way we have
  #           # all exposed ports from `contacts` available on `localhost` in this new container
  #           docker run --network container:contacts \
  #           appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080/contacts/test
  #     - deploy:
  #         name: Build and push Docker image
  #         command: |
  #           TAG="0.1.${CIRCLE_BUILD_NUM}"
  #           docker build -t circleci/cci-demo-docker:$TAG .
  #           docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
  #           docker push circleci/cci-demo-docker:$TAG
    

workflows:
  version: 2

  build-then-test:
    jobs:
      - BackBuild
      - BackTest:
          requires:
            - BackBuild
      - FrontTest:
          requires:
            - BackBuild
