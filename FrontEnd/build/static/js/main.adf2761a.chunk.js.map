{"version":3,"sources":["images/background.jpg","api/Index.js","components/Login.js","api/ApiService.js","components/Signup.js","components/Booking.js","components/History.js","components/NavBar.js","components/Home.js","components/Users/EditUser.js","components/BookingCard.js","components/ActiveBookings.js","components/PastBookings.js","components/AdminNav.js","components/DashboardAdmin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeUseFetch","url","options","callback","undefined","useState","response","setResponse","error","setError","loading","setLoading","useEffect","abortController","AbortController","signal","a","axios","res","json","data","status","aborted","doFetch","abort","Api","post","formData","method","headers","withCredentials","Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SendLoginData","setResult","username","password","URLSearchParams","append","console","log","alert","SignIn","classes","setUsername","setPassword","setSubmit","loginResult","setLoginResult","history","useHistory","push","Container","component","maxWidth","JSON","stringify","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","FormControlLabel","control","Checkbox","Button","onClick","Grid","container","item","xs","Link","href","Box","mt","handleLoginRedirect","request","responseURL","props","Promise","reject","resolve","get","then","userId","USER_API_BASE_URL","delete","user","put","service","booking","patch","Signup","addUser","preventDefault","state","contactNumber","ApiService","setState","message","catch","address","bind","onSubmit","this","newPerson","placeholder","Address","Component","Booking","reloadServiceList","fetchServices","schemas","Array","from","body","reloadEmployeeList","fetchEmployeeByService","service_id","Number","employees","formatDate","date","formatPad","num","String","padStart","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","hour","getUTCHours","minute","getUTCMinutes","onsubmit","split","map","start_time","starttime","end_time","endtime","start_date","end_date","startDateTime","endDateTime","user_ids","createBooking","employee","startdate","style","overflow","length","schema","key","disabled","History","reloadBookingList","fetchPastBookings","pastbookings","CardDeck","pastbooking","Card","Img","src","Body","Title","Text","customers","Footer","NavBar","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Divider","eventKey","Home","background","EditUser","BookingCard","render","approved","ActiveBookings","fetchBookings","bookings","PastBookings","AdminNav","DashboardAdmin","fetchAdminBookings","approveBooking","approveBookingStatus","window","location","reload","NoMatch","useLocation","pathname","App","exact","path","to","Login","ActiveBooking","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adf2761a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.ae1e85b2.jpg\";","import { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n/*\n * https://medium.com/better-programming/learn-to-create-your-own-usefetch-react-hook-9cc31b038e53\n * https://wanago.io/2019/11/18/useeffect-hook-in-react-custom-hooks\n */\n\n/**\n *   Make makeUseFetch returns a function to actually make the API call.\n *\n */\n\nexport const makeUseFetch = (url, options) => (callback = undefined) => {\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    const doFetch = async () => {\n      setLoading(true);\n      try {\n        const res = await axios({ ...options, url });\n        const json = res.data;\n        if (res.status != 200) {\n          throw json;\n        }\n        if (!signal.aborted) {\n          if (callback !== undefined) {\n            callback(json);\n          }\n          setResponse(json);\n        }\n      } catch (e) {\n        if (!signal.aborted) {\n          setError(e);\n        }\n      } finally {\n        if (!signal.aborted) {\n          setLoading(false);\n        }\n      }\n    };\n    doFetch();\n    return () => {\n      abortController.abort();\n    };\n  }, [callback]);\n  return { response, error, loading };\n};\nexport const Api = {\n  login: {\n    post: (formData) =>\n      makeUseFetch(\"http://localhost:8080/login\", {\n        method: \"POST\",\n        data: formData,\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        withCredentials: true\n      }),\n  },\n  Signup: {\n    post: (jsonData) =>\n      makeUseFetch(\"http://localhost:8080/api/user/createCustomer\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        data: jsonData,\n      }),\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Api } from \"../api/Index\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      AGME\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SendLoginData({ setResult, username, password }) {\n  const [data] = useState(() => {\n    const formData = new URLSearchParams();\n    formData.append(\"username\", username);\n    formData.append(\"password\", password);\n    return formData;\n  });\n\n  const { response, error, loading } = Api.login.post(data)();\n  useEffect(() => {\n    if (response) {\n      console.log(response);\n      setResult(response);\n    } else if (error) {\n      console.log(error);\n      alert(\"error check console\");\n      setResult(null);\n    }\n  }, [response, error, setResult]);\n  return <>{loading && <p> Loading...Please wait...</p>}</>;\n}\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [submit, setSubmit] = useState(false);\n  const [loginResult, setLoginResult] = useState(\"\");\n\n  const history = useHistory();\n  useEffect(() => {\n    if (!loginResult) {\n      setSubmit(false);\n    } else if (loginResult) {\n      history.push(\"/home\");\n    }\n  }, [loginResult, setSubmit, history]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div>{JSON.stringify(loginResult)}</div>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}></Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Username\"\n            name=\"email\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          {submit ? (\n            <SendLoginData\n              setResult={setLoginResult}\n              username={username}\n              password={password}\n            />\n          ) : (\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => setSubmit(true)}\n            >\n              Sign In\n            </Button>\n          )}\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"forgetpassword\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/Signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import axios from \"axios\";\n\nconst USER_API_BASE_URL = \"http://localhost:8080/user\";\n\nconst handleLoginRedirect = (component) => {\n  return (res) => {\n    if (res.request.responseURL === \"http://localhost:8080/login\") {\n      debugger;\n      component.props.history.push(\"/login\");\n      return Promise.reject({});\n    }\n    return Promise.resolve(res);\n  };\n};\n\nclass ApiService {\n  fetchUsers(component) {\n    return axios\n      .get(\"http://localhost:8080/api/user/getEmployees\", {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  fetchUserById(component, userId) {\n    return axios\n      .get(USER_API_BASE_URL + \"/\" + userId, {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  deleteUser(component, userId) {\n    return axios\n      .delete(USER_API_BASE_URL + \"/\" + userId, {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  addUser(component, user) {\n    return axios\n      .post(\"http://localhost:8080/api/user/createCustomer\", user, {\n        headers: {\n          // Overwrite Axios's automatically set Content-Type\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  editUser(component, user) {\n    return axios\n      .put(USER_API_BASE_URL + \"/\" + user.id, user, {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  fetchBookings(component) {\n    return axios\n      .get(\"http://localhost:8080/api/booking/getUpcomingCustomerBookings\", {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  fetchPastBookings(component) {\n    return axios\n      .get(\"http://localhost:8080/api/booking/getCompletedCustomerBookings\", {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  fetchServices(component) {\n    return axios\n      .get(\" http://localhost:8080/api/service/getServices\", {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  /**\n   * service: { service_id: <Number> }\n   */\n  fetchEmployeeByService(component, service) {\n    return axios\n      .post(\" http://localhost:8080/api/user/getEmployeesByService\", service, {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  createBooking(component, booking) {\n    return axios\n      .post(\"http://localhost:8080/api/booking/createBooking\", booking, {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  fetchEmployees(component) {\n    return axios\n      .get(\" http://localhost:8080/api/user/getEmployees\", {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  fetchAdminBookings(component) {\n    return axios\n      .get(\"http://localhost:8080/api/booking/getAdminBookings\", {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n\n  approveBookingStatus(component, id) {\n    return axios\n      .patch(\"http://localhost:8080/api/booking/approveBooking\", id, {\n        withCredentials: true,\n      })\n      .then(handleLoginRedirect(component));\n  }\n}\n\nexport default new ApiService();\n","import React, { Component } from \"react\";\nimport ApiService from \"../api/ApiService\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      contactNumber: \"\",\n      address: \"\",\n      message: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newPerson = {\n      name: this.state.name,\n      username: this.state.username,\n      password: this.state.password,\n      contactNumber: this.state.contactNumber,\n      address: this.state.address,\n    };\n\n    console.log(newPerson);\n  }\n\n  addUser = (e) => {\n    e.preventDefault();\n    let user = {\n      name: this.state.name,\n      username: this.state.username,\n      password: this.state.password,\n      contactNumber: this.state.contactNumber,\n    };\n    ApiService.addUser(this, user)\n      .then((res) => {\n        this.setState({ message: \"User added successfully.\" });\n        this.props.history.push(\"/login\");\n      })\n      .catch(console.log);\n  };\n\n  render() {\n    return (\n      <div className=\"Person\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">SignUp</h5>\n              <hr />\n              <div>{this.state.message}</div>\n              <form onSubmit={this.onSubmit}>\n                <h6>Full Name</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg \"\n                    placeholder=\"Full Name\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Username</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"UserName\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Password</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Contact Number</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"number\"\n                    className=\"form-control form-control-lg\"\n                    name=\"contactNumber\"\n                    placeholder=\"Contact Number\"\n                    value={this.state.contactNumber}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Address</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    name=\"Address\"\n                    placeholder=\"Address\"\n                    value={this.state.Address}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                  onClick={this.addUser}\n                />\n                <a href=\"/login\">Back</a>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Signup;\n","import React, { Component } from \"react\";\nimport ApiService from \"../api/ApiService\";\n\nclass Booking extends Component {\n  constructor() {\n    super();\n    this.state = {\n      service: \"\",\n      employee: \"\",\n      schemas: [],\n      employees: [],\n      startdate: \"\",\n      starttime: \"\",\n      endtime: \"\",\n      date: \"\",\n      message: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.reloadServiceList();\n  }\n\n  reloadServiceList = () => {\n    ApiService.fetchServices(this).then((res) => {\n      const schemas = Array.from(res.data.body);\n      this.setState({ schemas }, this.reloadEmployeeList);\n    });\n  };\n\n  reloadEmployeeList = () => {\n    if (this.state.service) {\n      ApiService.fetchEmployeeByService(this, {\n        service_id: Number(this.state.service),\n      }).then((res) => {\n        this.setState({ employees: Array.from(res.data.body) });\n      });\n    }\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value }, () => {\n      if (name === \"service\") {\n        this.reloadEmployeeList();\n      }\n    });\n  };\n\n  /**\n   * @param {Date} date object to format\n   * @return {string} with format like this '2020-09-07T17:00+10:00'\n   */\n  formatDate = (date) => {\n    const formatPad = (num) => String(num).padStart(\"2\", \"0\");\n    const year = date.getUTCFullYear();\n    const month = formatPad(date.getUTCMonth() + 1);\n    const day = formatPad(date.getUTCDate());\n    const hour = formatPad(date.getUTCHours());\n    const minute = formatPad(date.getUTCMinutes());\n    return `${year}-${month}-${day}T${hour}:${minute}+00:00`;\n  };\n\n  onsubmit = (e) => {\n    e.preventDefault();\n    const date = this.state.date.split(\"-\").map(Number);\n    const start_time = this.state.starttime.split(\":\").map(Number);\n    const end_time = this.state.endtime.split(\":\").map(Number);\n    const start_date = new Date(...date, ...start_time);\n    const end_date = new Date(...date, ...end_time);\n\n    const booking = {\n      startDateTime: this.formatDate(start_date),\n      endDateTime: this.formatDate(end_date),\n      user_ids: [Number(5)]\n    };\n    ApiService.createBooking(this, booking).then((res) => {\n      console.log(booking);\n      this.setState({ message: \"Booking Created!\" });\n    });\n    console.log(this.state.message);\n  };\n\n  render() {\n    const { schemas, employees } = this.state;\n    return (\n      <>\n        <div>\n          <form\n            className=\"booking-form\"\n            onSubmit={this.onsubmit}\n            style={{ overflow: \"hidden\" }}\n          >\n            <div className=\"row booking-form-row\">\n              <div className=\"col-md-7 ml-auto mr-auto margin-offset\">\n                <h3>Create A Booking</h3>\n                <br />\n                <div className=\"form-row\">\n                  <div className=\"form-group col-md-3\">\n                    <label>Service :</label>\n                    <select\n                      name=\"service\"\n                      value={this.state.service}\n                      onChange={this.onChange}\n                      className=\"form-control\"\n                    >\n                      {this.state.service === \"\" && (\n                        <option value=\"\">Select A Service</option>\n                      )}\n                      {schemas &&\n                        schemas.length > 0 &&\n                        schemas.map((schema) => (\n                          <option key={schema.id} value={schema.id}>\n                            {schema.name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n                  <div className=\"form-group col-md-2\">\n                    <label>Employees :</label>\n                    <select\n                      name=\"employee\"\n                      value={this.state.employee}\n                      onChange={this.onChange}\n                      className=\"form-control\"\n                    >\n                      {this.state.service === \"\" ? (\n                        <option value=\"\"></option>\n                      ) : employees && employees.length > 0 ? (\n                        employees.map((employee) => (\n                          <option key={employee.id} value={employee.id}>\n                            {employee.name}\n                          </option>\n                        ))\n                      ) : (\n                            <option disabled>No Employees</option>\n                          )}\n                    </select>\n                  </div>\n                  <div className=\"form-group col-md-3\">\n                    <label>Date :</label>\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      name=\"date\"\n                      value={this.state.date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group col-md-2\">\n                    <label>Start Time :</label>\n                    <input\n                      type=\"time\"\n                      className=\"form-control\"\n                      name=\"starttime\"\n                      value={this.state.starttime}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group col-md-2\">\n                    <label>End Time :</label>\n                    <input\n                      type=\"time\"\n                      className=\"form-control\"\n                      name=\"endtime\"\n                      value={this.state.endtime}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"col-md-12 text-center\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n                      onClick={this.onsubmit}\n                    >\n                      Create Booking\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Booking;\n","import React, { Component } from \"react\";\nimport { Table, Card, CardDeck } from \"react-bootstrap\";\nimport NavBar from \"./NavBar\";\nimport ApiService from \"../api/ApiService\";\n\nclass History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pastbookings: [],\n      message: null,\n    };\n  }\n\n  componentDidMount() {\n    this.reloadBookingList();\n  }\n\n  reloadBookingList = () => {\n    ApiService.fetchPastBookings(this).then((res) => {\n      this.setState({ pastbookings: Array.from(res.data.body) });\n    });\n  };\n  render() {\n    return (\n      <>\n        <header>\n          <NavBar />\n        </header>\n        <div className=\"active-booking-wrapper\">\n          <CardDeck>\n            {this.state.pastbookings.map((pastbooking) => (\n              <Card>\n                <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n                <Card.Body>\n                  <Card.Title>Service Name</Card.Title>\n                  <Card.Text>\n                    <ul>\n                      <li>\n                        Customer Name : {pastbooking.customers[0][\"name\"]}\n                      </li>\n                      <li>\n                        Employee Name : {pastbooking.employees[0][\"name\"]}\n                      </li>\n                      <li>Start-Date : {pastbooking.startDateTime}</li>\n                      <li>End-Date : {pastbooking.endDateTime}</li>\n                    </ul>\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                  <small className=\"text-muted\">Last updated 3 mins ago</small>\n                </Card.Footer>\n              </Card>\n            ))}\n          </CardDeck>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default History;\n","import React, { Component } from \"react\";\nimport { Navbar, NavDropdown, Nav } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Booking from \"./Booking\";\nimport Home from \"./Home\";\nimport History from \"./History\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"color-nav\"\n          collapseOnSelect\n          expand=\"lg\"\n          variant=\"dark\"\n        >\n          <Navbar.Brand>AGME</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/home\"> Home</Nav.Link>\n              <Nav.Link href=\"/activebookings\">Current Bookings</Nav.Link>\n              <Nav.Link href=\"/history\">History</Nav.Link>\n            </Nav>\n            <Nav>\n              <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\n                <NavDropdown.Item href=\"/edituser\">\n                  Edit Profile\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n              <Nav.Link eventKey={2} href=\"/login\">\n                Log Out\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport ApiService from \"../api/ApiService\";\nimport NavBar from \"./NavBar\";\nimport Booking from \"./Booking\";\nimport background from \"../images/background.jpg\";\n\nclass Home extends Component {\n\n\n\n  render() {\n    return (\n      <>\n\n        <header>\n          <NavBar />\n        </header>\n        <section>\n          <div className=\"order-1 order-lg-2\">\n            <img src={background} className=\"img-fluid home-bq\" />\n            <div className=\"booking-wrapper\">\n              <Booking />\n            </div>\n          </div>\n\n\n\n        </section>\n\n      </>\n\n    );\n  }\n\n}\n\nexport default Home;","import React, { Component } from \"react\";\n\nclass EditUser extends Component {\n  render() {\n    return (\n      <>\n        <h2> Edit User</h2>\n      </>\n    );\n  }\n}\n\nexport default EditUser;\n","import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nclass BookingCard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Card>\n        {/* <pre>{JSON.stringify(booking, null, \"    \")}</pre> */}\n        {/* <Card.Img variant=\"top\" src=\"holder.js/100px160\" /> */}\n        <Card.Body>\n          <Card.Title>Service Name</Card.Title>\n          <Card.Title>Customers</Card.Title>\n          <ul>\n            {this.props.booking.customers.map(({ name }) => (\n              <li key={name}>Name: {name}</li>\n            ))}\n          </ul>\n          <Card.Title>Employees</Card.Title>\n\n          <ul>\n            {this.props.booking.employees.map(({ name }) => (\n              <li key={name}>Name: {name} </li>\n            ))}\n          </ul>\n          <Card.Text>Start-Date : {this.props.booking.startDateTime}</Card.Text>\n          <Card.Text>End-Date : {this.props.booking.endDateTime}</Card.Text>\n        </Card.Body>\n        {this.props.render && this.props.render()}\n        <Card.Footer>\n          <span className=\"mr-2\">\n            {this.props.booking.approved ? (\n              <span className=\"badge badge-success\">Active</span>\n            ) : (\n              <span className=\"badge badge-secondary\">Pending</span>\n            )}\n          </span>\n\n          <small className=\"text-muted float-right\">\n            Last updated 3 mins ago\n          </small>\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n\nexport default BookingCard;\n","import React, { Component } from \"react\";\nimport { Table, Card, CardDeck } from \"react-bootstrap\";\nimport NavBar from \"./NavBar\";\nimport BookingCard from \"./BookingCard\";\nimport ApiService from \"../api/ApiService\";\n\nexport default class ActiveBookings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      message: null,\n    };\n  }\n\n  componentDidMount() {\n    this.reloadBookingList();\n  }\n\n  reloadBookingList = () => {\n    ApiService.fetchBookings(this).then((res) => {\n      debugger;\n      this.setState({ bookings: Array.from(res.data.body) });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <NavBar />\n        </header>\n        <div className=\"active-booking-wrapper\">\n          <CardDeck>\n            {this.state.bookings.map((booking) => (\n              <BookingCard key={booking.id} booking={booking}></BookingCard>\n            ))}\n          </CardDeck>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AdminNav from \"./AdminNav\";\nimport { Table, Card, CardDeck } from \"react-bootstrap\";\nimport ApiService from \"../api/ApiService\";\n\n\nclass PastBookings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          pastbookings: [],\n          message: null,\n        };\n      }\n    \n      \n    \n  render() {\n    return (\n      <>\n        <header>\n          <AdminNav />\n        </header>\n        <div className=\"pending-booking-wrapper\">\n        <p>Past 7 Days Bookings</p>\n        <form>\n          <CardDeck>\n            \n              <Card>\n                {/* <Card.Img variant=\"top\" src=\"holder.js/100px160\" /> */}\n                <Card.Body>\n                  <Card.Title>Service Name</Card.Title>\n                  <Card.Text>\n                    \n                    <ul>\n                      <li><lable>Customer Name : </lable></li>\n                      <li><lable>Employee Name : </lable></li>\n                      <li><lable>Start-Date : </lable></li>\n                      <li><lable>End-Date : </lable></li>\n                    </ul>\n                    \n                  </Card.Text>\n                  \n                </Card.Body>\n                <Card.Footer>\n                  <small className=\"text-muted\">Last updated 3 mins ago</small>\n                </Card.Footer>\n              </Card>\n            \n          </CardDeck>\n          \n        </form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PastBookings;","import React, { Component } from \"react\";\nimport { Navbar, NavDropdown, Nav } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PastBookings from \"./PastBookings\";\nimport DashboardAdmin from \"./DashboardAdmin\";\nimport Employee from \"./Employee\";\n\nclass AdminNav extends Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"color-nav\" collapseOnSelect expand=\"lg\" variant=\"dark\" >\n          <Navbar.Brand>AGME</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/PastBookings\"> Past Bookings</Nav.Link>\n              <Nav.Link href=\"/DashboardAdmin\">Home</Nav.Link>\n              <Nav.Link href=\"/Employee\">Employee</Nav.Link>\n            </Nav>\n            <Nav>\n              <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\n                <NavDropdown.Item href=\"/edituser\">\n                  Edit Profile\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n              <Nav.Link eventKey={2} href=\"#memes\">\n                Log Out\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNav;\n","import React, { Component } from \"react\";\nimport AdminNav from \"./AdminNav\";\nimport { Table, Card, CardDeck } from \"react-bootstrap\";\nimport ApiService from \"../api/ApiService\";\nimport BookingCard from \"./BookingCard\";\n\nclass DashboardAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookings: [],\n      message: null,\n    };\n  }\n\n  componentDidMount() {\n    this.reloadBookingList();\n  }\n\n  refreshPage() {\n    window.location.reload(false);\n  }\n\n  reloadBookingList = () => {\n    ApiService.fetchAdminBookings(this).then((res) => {\n      this.setState({ bookings: Array.from(res.data.body) });\n    });\n  };\n\n  approveBooking = (id) => {\n    ApiService.approveBookingStatus(this, { id }).then((res) => {\n      this.setState({ message: res.data });\n      this.reloadBookingList();\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <AdminNav />\n        </header>\n        <div className=\"active-booking-wrapper\">\n          <CardDeck>\n            {this.state.bookings.map((booking) => (\n              <BookingCard\n                key={booking.id}\n                booking={booking}\n                render={() => (\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success\"\n                      onClick={() => this.approveBooking(booking.id)}\n                    >\n                      Approve\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger\"\n                      onClick={() => alert(\"Declining bookings unsupported\")}\n                    >\n                      Reject\n                    </button>\n                  </div>\n                )}\n              />\n            ))}\n          </CardDeck>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default DashboardAdmin;\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\n// import DashboardUser from \"./components/DashboardUser\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  useLocation,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Booking from \"./components/Booking\";\nimport History from \"./components/History\";\nimport EditUser from \"./components/Users/EditUser\";\nimport ActiveBooking from \"./components/ActiveBookings\";\nimport DashboardAdmin from \"./components/DashboardAdmin\";\n// import Employee from \"./components/Employee\";\nimport PastBookings from \"./components/PastBookings\";\n// import DashEmployee from \"./components/DashEmployee\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={() => <Redirect to=\"/login\" />} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/booking\" component={Booking} />\n        <Route exact path=\"/history\" component={History} />\n        <Route exact path=\"/edituser\" component={EditUser} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/activebookings\" component={ActiveBooking} />\n        <Route exact path=\"/dashboardadmin\" component={DashboardAdmin} />\n        {/* <Route exact path=\"/employee\" component={Employee} /> */}\n        <Route exact path=\"/pastbookings\" component={PastBookings} />\n        {/* <Route exact path=\"/dashemployee\" component={DashEmployee} /> */}\n        <Route exact path=\"*\" component={NoMatch} />\n      </Switch>\n    </Router>\n  );\n}\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}